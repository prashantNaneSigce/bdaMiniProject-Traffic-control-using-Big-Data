
DROP TABLE IF EXISTS yson_crashes_csv;
CREATE EXTERNAL TABLE yson_crashes_csv(
    crash_record_id string,
    cpd_report_num string,
    crash_date_est string,
    crash_date timestamp,
    posted_speed_limit int,
    traffic_ctrl_device string,
    device_cond string,
    weather_cond string,
    lighting_cond string,
    first_crash_type string,
    traffic_way_type string,
    lane_count int,
    street_alignment string,
    roadway_surface_cond string,
    road_defect string,
    report_type string,
    crash_type string,
    intersection_related boolean,
    not_right_of_way boolean,
    hit_and_run boolean,
    damage string,
    date_police_notified timestamp,
    prim_contributory_cause string,
    sec_contributory_cause string,
    street_num int,
    direction string,
    street_suf string,
    beat_of_occurrence int,
    photos_taken string,
    statements_taken string,
    dooring string,
    work_zone string,
    work_zone_type string,
    workers_present string,
    num_units int,
    most_severe_injury string,
    injuries_total int,
    injuries_fatal int,
    injuries_incapacitating int,
    injuries_non_incapacitating int,
    injuries_reported_not_evident int,
    injuries_no_indication int,
    injuries_unknown int,
    crash_hour int,
    crash_day_of_week int,
    crash_month int,
    latitude decimal(10, 8),
    longitude decimal(10, 8),
    location string
)
    ROW FORMAT serde 'org.apache.hadoop.hive.serde2.OpenCSVSerde'
WITH SERDEPROPERTIES (
    "separatorChar" = "\,",
    "quoteChar"     = "\"",
    "timestamp.formats" = "MM/dd/yyyy hh:mm:ss a"
)
STORED AS TEXTFILE
LOCATION '/tmp/yson/chidata/crashes'
TBLPROPERTIES("skip.header.line.count"="1");

-- Create an ORC table to hold data
DROP TABLE IF EXISTS yson_crashes;
CREATE EXTERNAL TABLE yson_crashes(
    crash_record_id string,
    cpd_report_num string,
    crash_date_est string,
    crash_date date,
    crash_datetime timestamp,
    posted_speed_limit int,
    traffic_ctrl_device string,
    device_cond string,
    weather_cond string,
    lighting_cond string,
    first_crash_type string,
    traffic_way_type string,
    lane_count int,
    street_alignment string,
    roadway_surface_cond string,
    road_defect string,
    report_type string,
    crash_type string,
    intersection_related boolean,
    not_right_of_way boolean,
    hit_and_run boolean,
    damage string,
    date_police_notified timestamp,
    prim_cause string,
    sec_cause string,
    street_num int,
    num_dir_str_suf string,
    direction string,
    --dir_street string,
    dir_street_suf string,
    beat_of_occurrence int,
    photos_taken string,
    statements_taken string,
    dooring string,
    work_zone string,
    work_zone_type string,
    workers_present string,
    num_units int,
    most_severe_injury string,
    injuries_total int,
    injuries_fatal int,
    injuries_incapacitating int,
    injuries_non_incapacitating int,
    injuries_reported_not_evident int,
    injuries_no_indication int,
    injuries_unknown int,
    crash_hour int,
    crash_day_of_week int,
    crash_month int,
    latitude decimal(10, 8),
    longitude decimal(10, 8),
    location string
)
    stored as orc;

-- Copy the CSV table to the ORC table
INSERT OVERWRITE TABLE yson_crashes
SELECT
    crash_record_id,
    cpd_report_num,
    crash_date_est,
    date(from_unixtime(unix_timestamp(crash_date,"MM/dd/yyyy hh:mm:ss a"))),
    from_unixtime(unix_timestamp(crash_date,"MM/dd/yyyy hh:mm:ss a")),
    posted_speed_limit,
    traffic_ctrl_device,
    device_cond,
    weather_cond,
    lighting_cond,
    first_crash_type,
    traffic_way_type,
    lane_count,
    street_alignment,
    roadway_surface_cond,
    road_defect,
    report_type,
    crash_type,
    CAST(intersection_related AS boolean),
    CAST(not_right_of_way AS boolean),
    CAST(hit_and_run AS boolean),
    damage,
    from_unixtime(unix_timestamp(date_police_notified,"MM/dd/yyyy hh:mm:ss a")),
    prim_contributory_cause,
    sec_contributory_cause,
    street_num,
    CONCAT(street_num, " ", direction, " ", street_suf),
    direction,
    --CONCAT(direction, " ", cast(split(street_suf, "[ ]")[0] as string)),
    CONCAT(direction, " ", street_suf),
    beat_of_occurrence,
    photos_taken,
    statements_taken,
    dooring,
    work_zone,
    work_zone_type,
    workers_present,
    num_units,
    most_severe_injury,
    injuries_total,
    injuries_fatal,
    injuries_incapacitating,
    injuries_non_incapacitating,
    injuries_reported_not_evident,
    injuries_no_indication,
    injuries_unknown,
    crash_hour,
    crash_day_of_week,
    crash_month,
    latitude,
    longitude,
    location
FROM yson_crashes_csv
WHERE crash_date is not null and direction is not null
    and street_suf is not null and latitude is not null
    and longitude is not null;
